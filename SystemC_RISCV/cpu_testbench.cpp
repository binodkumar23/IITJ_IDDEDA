#include "cpu.cpp"
#include "systemc.h"

// instruction = "0000000 00000 00000 000 00000 1001111";

int sc_main(int argc, char* argv[]) {
    
    sc_signal<bool>   clock;
    sc_signal<bool> cpu_out;
    sc_signal<int> Program_Counter;
    sc_signal<sc_bv<32>> instruction;
    sc_signal<sc_bv<32*32>> instruction_memory;
    sc_signal<sc_bv<32*32>> data_memory;

    int i = 0;
    // Connect the DUT
    cpu cpu_1("cpu");
    cpu_1.clock(clock);
    cpu_1.cpu_out(cpu_out);
    cpu_1.Program_Counter(Program_Counter);
    cpu_1.instruction(instruction);
    cpu_1.instruction_memory(instruction_memory);
    cpu_1.data_memory(data_memory);

    sc_start(1, SC_NS);

    // Open VCD file
    sc_trace_file* wf = sc_create_vcd_trace_file("cpu");
    // Dump the desired signals
    sc_trace(wf, clock, "clock");
    sc_trace(wf, cpu_out, "cpu_out");
    sc_trace(wf, instruction, "instruction");
    sc_trace(wf, instruction_memory, "instruction_memory");
    sc_trace(wf, data_memory, "data_memory");

    // Initialize all variables
    instruction = "00000000000100000000000101001111";

    //sample (for reference) 0000001 0000100000 111 000101001111

    // R type _rough work
    //00000000000100000000000101001111
    //0000001 0000100000 111 00010 1001111
    //0000001 0000100000 110 00010 1001111
    //0000001 0000100000 100 00010 1001111
    //  0000001 0000100000 111 00010 1001111


    // I type (Load ) rough

    // 000000000001 00011 111 00100 1101111

    // S type (Store) rough 
    // 0000000 00000 00100 000 00000 0100011

    // B type
    // 0000000 00000 00001 001 00100 1100011

    // J type
    // 00000000000000001 11111 1101110

    /* 
    instruction_memory =    "00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111 00000010000100000111000101001111"
                            "00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111"
                            "00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111"
                            "00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111"
                            "00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111"
                            "00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111"
                            "00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111"
                            "00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111 00000000000100000000000101001111";

    
    */
                             //00000010000100000111000101001111
                            // 00000000000000000000000000100011

    // To ease editing, a copy of instruction memory is kept here with spaces
     
    /*                                                                                         00000000000000001001001001100011 00000000001000000000111111101110
    instruction_memory =    "00000000000100011111001001101111 00000000000000101000000000100011 00000000000000001001001001100011 00000000001000000000111111101110"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111";                            



    */
                           //0000001000010000011100010100111100000010000100000111000101001111
    instruction_memory =    "00000000000100011111001001101111000000000000001010000000001000110000000000000000100100100110001100000000001000000000111111101110"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111";                            



    /*                                                                  
    data_memory        =    "00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111 00000010000100000111000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111"
                            "00000010000100000111000101001111 00000010000100000111000101001111 00000010000100000110000101001111 00000010000100000100000101001111";                                
    
    */

    data_memory        =    "00000010000100000111000101001111000000100001000001100001010011110000001000010000010000010100111100000010000100000111000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111"
                            "00000010000100000111000101001111000000100001000001110001010011110000001000010000011000010100111100000010000100000100000101001111";                            
    

    Program_Counter = 0;
    
    // Here we run the clock
    for (i = 0;i < 32;i++) {
        clock = 0;
        sc_start(1, SC_NS);
        clock = 1;
        sc_start(1, SC_NS);
        //Program_Counter = Program_Counter+ 32;--> Carried out in the CPU module
    }
    

    cout << "@" << sc_time_stamp() << " Terminating simulation\n" << endl;
    sc_close_vcd_trace_file(wf);
    return 0;// Terminate simulation

}